#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
4Sum II.

https://leetcode.com/explore/learn/card/hash-table/187/conclusion-hash-table/1134/
Created on Thu Jun  6 08:35:55 2024
@author: znapy
SPDX-License-Identifier: Apache-2.0
"""

from timer import timer


class Solution:
    """Leetcode class for answers."""

    @timer
    def four_sum_count_brute(self, nums1: list[int], nums2: list[int],
                             nums3: list[int], nums4: list[int]) -> int:
        """Brute calculates."""
        result = 0
        for v1 in nums1:
            for v2 in nums2:
                for v3 in nums3:
                    found = nums4.count(-v1 - v2 - v3)
                    if found:
                        result += found

        return result

    def fourSumCount(self,  # pylint: disable=invalid-name
                     nums1: list[int], nums2: list[int], nums3: list[int],
                     nums4: list[int]) -> int:
        """Leetcode function as answer."""
        # Leetcode solution (path is a same as mine):
        #    AB = collections.Counter(a+b for a in A for b in B)
        #    return sum(AB[-c-d] for c in C for d in D)
        def mult(n1: list[int], n2: list[int]) -> dict[int, int]:
            result: dict[int, int] = {}
            for x in n1:
                for y in n2:
                    s = x+y
                    result[s] = result.get(s, 0) + 1
            return result

        result = 0

        d12 = mult(nums1, nums2)
        d34 = mult(nums3, nums4)

        for v12, c12 in d12.items():
            c34 = d34.get(-v12, 0)
            if c34:
                result += c12*c34

        return result


def main() -> None:
    """Start point."""
    nums1 = [-8,4,10,-20,2,-13,-17,-30,3,4,7,-11,-8,-7,-31,-9,10,-17,-22,
             -23,-14,2,-19,-22,-22,-2,-24,-16,-12,-31,0,-24,-22,-1,-28,-13,
             -18,-18,-5,-25,1,-21,-9,-5,-5,-32,-5,-10,1,-7,-8,-19,-13,3,-4,
             -28,-30,-18,-16,-8,-8,-8,-31,-17,-24,-4,-28,-3,-4,-9,5,-21,
             -23,-22,-14,-6,-32,-1,6,4,-16,5,-6,6,6,-23,5,-16,-16,-3,-3,
             -15,0,-29,7,3,3,-23,-9,-21]
    nums2 = [-12,-31,-20,-29,-4,0,-11,-22,-7,-23,-14,-16,-15,-6,-24,-23,
             -14,9,5,-2,10,-7,-15,-6,-25,-14,-16,0,-31,-20,1,-22,-29,-15,
             -7,-29,-26,-4,-19,-31,-18,9,-17,3,-27,-11,-12,3,-15,-2,-19,
             -14,-8,-17,-4,-11,-22,-29,9,4,-22,-29,-10,-8,-29,-4,-21,5,-26,
             -1,1,-8,-23,-19,-3,-12,-31,-10,-22,-25,3,-29,-29,-17,-6,-32,
             -11,-15,-23,-9,-20,8,6,10,-26,-26,-21,-16,-26,2]
    nums3 = [-22,-11,7,1,6,0,-27,-18,6,-16,-25,-24,-4,-28,-10,8,4,1,-19,-29,
             5,7,-16,1,6,-29,8,-31,2,-14,-21,6,-32,-26,4,2,-25,-29,8,10,-5,
             -30,-32,2,-31,-31,-21,-14,-8,-13,-11,6,-18,3,6,-12,-5,-6,6,9,
             -2,5,-28,-25,-12,4,-19,2,-24,-32,-14,-2,-17,-32,-24,-22,1,-18,
             -5,-28,-14,-6,-3,-25,-29,-24,-11,7,8,-28,9,0,-11,4,-10,-12,0,
             -28,-24,10]
    nums4 = [0,-5,-20,-32,-13,-4,-8,-14,-15,3,-4,-21,6,2,2,-30,-4,-9,3,-25,
             -27,0,-29,-12,-14,-13,-8,-8,3,2,-12,-18,-15,-23,7,-22,-16,-9,
             -27,-7,-7,2,-1,-18,-1,-18,-16,-13,-18,-27,3,-32,-25,-8,2,-20,
             4,-5,-30,-15,-30,-14,-1,4,-12,9,-32,-29,2,-2,-1,2,-12,8,-18,
             -6,-25,-19,-23,-19,-19,8,0,5,8,6,5,-12,8,-22,-29,-27,-28,-1,
             10,-32,-29,-31,1,-28]
    print(Solution().four_sum_count_brute(nums1, nums2, nums3, nums4))
    func_timed = timer(Solution().fourSumCount)
    print("result:", func_timed(nums1, nums2, nums3, nums4))


if __name__ == "__main__":
    main()


#########
# Tests
# pylint: disable=missing-function-docstring


def test_leetcode_example_1() -> None:
    """The first example in the task."""
    assert Solution().fourSumCount(
        [1, 2], [-2, -1], [-1, 2], [0, 2]) == 2


def test_leetcode_example_2() -> None:
    """The second example in the task."""
    assert Solution().fourSumCount(
        [0], [0], [0], [0]) == 1


def test_common() -> None:
    """The third example in the task."""
    func = Solution().fourSumCount

    assert func([1], [2], [3], [4]) == 0

    assert func([1], [-1], [1], [1]) == 0

    assert func([1], [-1], [1], [-1]) == 1

    assert func([1, 0], [-1, 0], [1, 0], [1, 0]) == 4

    # Leetcode unittest 1
    assert func([-1, -1], [-1, 1], [-1, 1], [1, -1]) == 6

    # Leetcode unittest 2
    nums1 = [-8,4,10,-20,2,-13,-17,-30,3,4,7,-11,-8,-7,-31,-9,10,-17,-22,
             -23,-14,2,-19,-22,-22,-2,-24,-16,-12,-31,0,-24,-22,-1,-28,-13,
             -18,-18,-5,-25,1,-21,-9,-5,-5,-32,-5,-10,1,-7,-8,-19,-13,3,-4,
             -28,-30,-18,-16,-8,-8,-8,-31,-17,-24,-4,-28,-3,-4,-9,5,-21,
             -23,-22,-14,-6,-32,-1,6,4,-16,5,-6,6,6,-23,5,-16,-16,-3,-3,
             -15,0,-29,7,3,3,-23,-9,-21]
    nums2 = [-12,-31,-20,-29,-4,0,-11,-22,-7,-23,-14,-16,-15,-6,-24,-23,
             -14,9,5,-2,10,-7,-15,-6,-25,-14,-16,0,-31,-20,1,-22,-29,-15,
             -7,-29,-26,-4,-19,-31,-18,9,-17,3,-27,-11,-12,3,-15,-2,-19,
             -14,-8,-17,-4,-11,-22,-29,9,4,-22,-29,-10,-8,-29,-4,-21,5,-26,
             -1,1,-8,-23,-19,-3,-12,-31,-10,-22,-25,3,-29,-29,-17,-6,-32,
             -11,-15,-23,-9,-20,8,6,10,-26,-26,-21,-16,-26,2]
    nums3 = [-22,-11,7,1,6,0,-27,-18,6,-16,-25,-24,-4,-28,-10,8,4,1,-19,-29,
             5,7,-16,1,6,-29,8,-31,2,-14,-21,6,-32,-26,4,2,-25,-29,8,10,-5,
             -30,-32,2,-31,-31,-21,-14,-8,-13,-11,6,-18,3,6,-12,-5,-6,6,9,
             -2,5,-28,-25,-12,4,-19,2,-24,-32,-14,-2,-17,-32,-24,-22,1,-18,
             -5,-28,-14,-6,-3,-25,-29,-24,-11,7,8,-28,9,0,-11,4,-10,-12,0,
             -28,-24,10]
    nums4 = [0,-5,-20,-32,-13,-4,-8,-14,-15,3,-4,-21,6,2,2,-30,-4,-9,3,-25,
             -27,0,-29,-12,-14,-13,-8,-8,3,2,-12,-18,-15,-23,7,-22,-16,-9,
             -27,-7,-7,2,-1,-18,-1,-18,-16,-13,-18,-27,3,-32,-25,-8,2,-20,
             4,-5,-30,-15,-30,-14,-1,4,-12,9,-32,-29,2,-2,-1,2,-12,8,-18,
             -6,-25,-19,-23,-19,-19,8,0,5,8,6,5,-12,8,-22,-29,-27,-28,-1,
             10,-32,-29,-31,1,-28]
    assert func(nums1, nums2, nums3, nums4) == 310521
